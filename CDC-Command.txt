docker run -d --name postgres -p 5432:5432 -e POSTGRES_USER=start_data_engineer -e POSTGRES_PASSWORD=password debezium/postgres:12

-----------------
docker exec -ti postgres /bin/bash


cat /var/lib/postgresql/data/postgresql.conf
--------------------

pgcli -h localhost -p 5432 -U start_data_engineer
#password is password

-------------------
CREATE SCHEMA bank;

SET search_path TO bank,public;

CREATE TABLE bank.holding (
    holding_id int,
    user_id int,
    holding_stock varchar(8),
    holding_quantity int,
    datetime_created timestamp,
    datetime_updated timestamp,
    primary key(holding_id)
);

ALTER TABLE bank.holding replica identity FULL;

insert into bank.holding values (1000, 1, 'VFIAX', 10, now(), now());
-------------------


------------------
docker run -d --name zookeeper -p 2181:2181 -p 2888:2888 -p 3888:3888 debezium/zookeeper:1.1

docker run -d --name kafka -p 9092:9092 --link zookeeper:zookeeper debezium/kafka:1.1
------------------

docker run -d --name connect -p 8083:8083 --link kafka:kafka --link postgres:postgres -e BOOTSTRAP_SERVERS=kafka:9092 -e GROUP_ID=sde_group -e CONFIG_STORAGE_TOPIC=sde_storage_topic -e OFFSET_STORAGE_TOPIC=sde_offset_topic debezium/connect:1.1


----------------

curl -H "Accept:application/json" localhost:8083/connectors/

-------------

curl -i -X POST -H "Accept:application/json" -H "Content-Type:application/json" localhost:8083/connectors/ -d "{"""name""": """sde-connector""", """config""": {"""connector.class""": """io.debezium.connector.postgresql.PostgresConnector""", """database.hostname""": """postgres""", """database.port""": """5432""", """database.user""": """start_data_engineer""", """database.password""": """password""", """database.dbname""" : """start_data_engineer""", """database.server.name""": """bankserver1""", """table.whitelist""": """bank.holding"""}}"

------

curl -H "Accept:application/json" localhost:8083/connectors/
------------

docker run -it --rm --name consumer --link zookeeper:zookeeper --link kafka:kafka debezium/kafka:1.1 watch-topic -a bankserver1.bank.holding --max-messages 1 | grep '^{' | jq

--------------

docker run -it --rm --name consumer --link zookeeper:zookeeper --link kafka:kafka debezium/kafka:1.1 watch-topic -a bankserver1.bank.holding | grep --line-buffered '^{' | E:\CDC\stream.py > E:\CDC\holding_pivot.txt


tail -f E:\CDC\holding_pivot.txt